= rtsp_client

* https://github.com/turboladen/rtsp

== DESCRIPTION:

This library intends to follow the RTSP RFC document (2326) to allow for working
with RTSP servers.  At this point, it's up to you to parse the data from a play
call, but we'll get there.  ...eventually.

For more information

RTSP: http://www.ietf.org/rfc/rfc2326.txt

SDP: http://tools.ietf.org/html/rfc4566

== FEATURES/PROBLEMS:

* RTSP client
* Currently, only unicast

== SYNOPSIS:

The uber-quick get started:

  client = RTSP::Client.new "64.202.98.91/sa.sdp"
  client.log?                # => true
  client.log = false
  client.server_uri          # => #<URI::Generic:0x00000100ba4db0 URL:rtsp://64.202.98.91:554/sa.sdp>
  client.streaming_state     # => :inactive
  client.cseq                # => 1
  
  response = client.options
  response.class             # => RTSP::Response
  response.code              # => 200
  response.messasge          # => "OK"
  client.cseq                # => 2

  response = client.describe
  response.body.class             # => SDP::Description
  client.aggregate_control_track  # => "rtsp://64.202.98.91:554/sa.sdp/"
  client.media_control_tracks     # => ["rtsp://64.202.98.91:554/sa.sdp/trackID=1"]
  client.cseq                     # => 3

  response = client.setup(client.media_control_tracks.first)
  response.session          # => 7098486223178290313
  client.session            # => 7098486223178290313
  client.cseq               # => 4
  client.streaming_state    # => :ready

  response = client.play(client.media_control_tracks.first)
  response.code             # => 460
  response.message          # => "Only Aggregate Option Allowed"
  response.connection       # => "Close"

  client.setup(client.media_control_tracks.first)
  client.session            # => 525653595989822251
  response = client.play(client.aggregate_control_track)
  response.range            # => "npt=now="
  resposne.rtp_info         # => "url=rtsp://64.202.98.91:554/sa.sdp/trackID=1"
  client.streaming_state    # => :playing

  client.pause(client.aggregate_control_track)
  client.streaming_state    # => :paused

  client.teardown(client.aggregate_control_track)
  client.session            # => 0
  client.streaming_state    # => :inactive

== REQUIREMENTS:

* (Tested) Rubies
  * JRuby 1.6.0
  * 1.9.2-p180
* RubyGems
  * sdp, '~> 0.2.2'
* RubyGems (development)
  * ore-core, '~> 0.1.0'
  * jeweler, '~> 1.5.0'
  * ore-tasks, '~> 0.3.0'
  * yard, '~> 0.6.0'
  * metric_fu
  * code_statistics, '~> 0.2.13'

== INSTALL:

* (sudo) gem install rtsp

== DEVELOPERS:

After checking out the source, run:

  $ bundle install

This task will install any missing dependencies.

== LICENSE:

(The MIT License)

Copyright (c) 2011 Steve Loveless, Mike Kirby

See LICENSE.rdoc for details.
